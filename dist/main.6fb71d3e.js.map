{"version":3,"sources":["../node_modules/three/build/three.module.js","../node_modules/three/examples/jsm/controls/OrbitControls.js","main/main.tsx","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","l","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","_cache","warnOnce","message","SRGBToLinear","LinearToSRGB","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","DisplayP3ToLinearSRGB","color","convertSRGBToLinear","LinearSRGBToDisplayP3","convertLinearToSRGB","TO_LINEAR","_TO_LINEAR","_defineProperty","FROM_LINEAR","_FROM_LINEAR","ColorManagement","enabled","legacyMode","workingColorSpace","colorSpace","convert","sourceColorSpace","targetColorSpace","sourceToLinear","targetFromLinear","concat","fromWorkingColorSpace","toWorkingColorSpace","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","canvas","width","height","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","sourceId","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_this2","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","dispose","transformUv","uv","encoding","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","WebGLRenderTarget","_EventDispatcher2","_super2","options","_this3","isWebGLRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","setSize","assign","DataArrayTexture","_Texture","_super3","_this4","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super4","_this5","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super5","_this6","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super6","_this7","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super7","count","_this8","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$b","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","u","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$a","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","boundingBox","computeBoundingBox","_box$3","union","geometry","attributes","position","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_v2$3","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$9","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","p","zInv","_matrix","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super8","_this9","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","remove","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","childResult","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","isColor","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","_EventDispatcher4","_super9","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","toString","setValues","newValue","currentValue","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","_color","getHexString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","MeshBasicMaterial","_Material","_super10","_this11","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","fromHalfFloat","DataUtils","_vector$8","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRange","gpuType","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","setXY","setXYZ","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","_super11","Uint8BufferAttribute","_BufferAttribute2","_super12","Uint8ClampedBufferAttribute","_BufferAttribute3","_super13","Int16BufferAttribute","_BufferAttribute4","_super14","Uint16BufferAttribute","_BufferAttribute5","_super15","Int32BufferAttribute","_BufferAttribute6","_super16","Uint32BufferAttribute","_BufferAttribute7","_super17","Float16BufferAttribute","_BufferAttribute8","_super18","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super19","Float64BufferAttribute","_BufferAttribute10","_super20","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$7","BufferGeometry","_EventDispatcher5","_super21","_this13","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$5","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super22","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","getVertexPosition","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_super23","widthSegments","heightSegments","depthSegments","_this15","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_super24","_this16","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super25","_this17","PerspectiveCamera","_Camera","_super26","fov","aspect","_this18","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super27","renderTarget","_this19","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","_iterator2","_step2","scene","_this$children","currentRenderTarget","currentToneMapping","toneMapping","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super28","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super29","_this21","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$4","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super30","_this22","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","mode","setMode","drawArrays","renderInstances","primcount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super31","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","disposeTexture","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","useLegacyLights","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","Set","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV1","HAS_ATTRIBUTE_UV2","HAS_ATTRIBUTE_UV3","supportsVertexTextures","isXRRenderTarget","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super32","_this24","isMeshDepthMaterial","_Material4","_super33","_this25","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_shadowSide","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_equationToGL","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_wrappingToGL","_filterToGL","_compareToGL","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","isVideoTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","compareFunction","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RED_INTEGER","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super34","_this26","isArrayCamera","Group","_Object3D4","_super35","_this27","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","DepthTexture","_Texture4","_super36","_this28","WebXRManager","_EventDispatcher6","_super37","_this29","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","cameraL","cameraR","cameraXR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","updateUserCamera","getCamera","getFoveation","fixedFoveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","tempValues","cachedObjects","cachedObject","chunkSize","chunkOffset","infos","boundary","remainingSizeInChunk","createCanvasElement","display","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","maxInstanceCount","prepare","getProgram","material2","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","_WebGLRenderer","_super38","FogExp2","Fog","Scene","_Object3D5","_super39","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$5","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super40","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super41","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super42","_this33","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$3","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_super43","_this34","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","boneTransform","Bone","_Object3D8","_super44","_this35","isBone","DataTexture","_Texture5","_super45","_this36","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super46","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh","_sphere$2","InstancedMesh","_Mesh2","_super47","_this38","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","_Material6","_super48","_this39","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super49","_this40","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super50","_this41","LineLoop","_Line2","_super51","_this42","_Material7","_super52","_this43","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super53","_this44","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super54","video","_this45","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super55","_this46","CompressedTexture","_Texture8","_super56","_this47","CompressedArrayTexture","_CompressedTexture","_super57","_this48","CanvasTexture","_Texture9","_super58","_this49","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","_Curve","_super59","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","_this50","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super60","aRadius","_this51","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super61","curveType","_this52","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super62","_this53","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super63","_this54","isCubicBezierCurve3","LineCurve","_Curve5","_super64","_this55","isLineCurve","LineCurve3","_Curve6","_super65","_this56","isLineCurve3","QuadraticBezierCurve","_Curve7","_super66","_this57","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super67","_this58","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super68","_this59","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super69","_this60","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super70","_this61","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super71","phiStart","phiLength","_this62","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super72","capSegments","radialSegments","_this63","CircleGeometry","_BufferGeometry4","_super73","thetaStart","thetaLength","_this64","segment","CylinderGeometry","_BufferGeometry5","_super74","radiusTop","radiusBottom","openEnded","_this65","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super75","_this66","PolyhedronGeometry","_BufferGeometry6","_super76","_this67","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super77","_this68","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super78","thresholdAngle","_this69","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super79","_this70","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super80","_this71","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super81","_this72","OctahedronGeometry","_PolyhedronGeometry3","_super82","_this73","RingGeometry","_BufferGeometry9","_super83","innerRadius","outerRadius","thetaSegments","phiSegments","_this74","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super84","_this75","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super85","_this76","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super86","_this77","TorusGeometry","_BufferGeometry12","_super87","tube","tubularSegments","_this78","TorusKnotGeometry","_BufferGeometry13","_super88","_this79","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super89","_this80","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super90","_this81","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super91","_this82","RawShaderMaterial","_ShaderMaterial","_super92","_this83","_Material9","_super93","_this84","_MeshStandardMaterial","_super94","_this85","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_toConsumableArray","_Material10","_super95","_this86","_Material11","_super96","_this87","_Material12","_super97","_this88","_Material13","_super98","_this89","_Material14","_super99","_this90","_LineBasicMaterial","_super100","_this91","arraySlice","isTypedArray","convertArray","forceClone","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super101","_this92","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super102","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super103","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super104","ColorKeyframeTrack","_KeyframeTrack2","_super105","NumberKeyframeTrack","_KeyframeTrack3","_super106","QuaternionLinearInterpolant","_Interpolant4","_super107","QuaternionKeyframeTrack","_KeyframeTrack4","_super108","StringKeyframeTrack","_KeyframeTrack5","_super109","VectorKeyframeTrack","_KeyframeTrack6","_super110","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","_super111","response","_this93","_wrapNativeSuper","FileLoader","_Loader","_super112","_this94","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super113","CompressedTextureLoader","_Loader3","_super114","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super115","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super116","urls","DataTextureLoader","_Loader6","_super117","texData","TextureLoader","_Loader7","_super118","Light","_Object3D11","_super119","_this95","HemisphereLight","_Light","_super120","_this96","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super121","_this97","isSpotLightShadow","SpotLight","_Light2","_super122","_this98","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super123","_this99","_cubeDirections","_cubeUps","PointLight","_Light3","_super124","_this100","DirectionalLightShadow","_LightShadow3","_super125","_this101","isDirectionalLightShadow","DirectionalLight","_Light4","_super126","_this102","AmbientLight","_Light5","_super127","_this103","RectAreaLight","_Light6","_super128","_this104","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super129","_this105","MaterialLoader","_Loader8","_super130","_this106","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super131","_this107","BufferGeometryLoader","_Loader9","_super132","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super133","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super134","_this108","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","colorSpaceConversion","imageBitmap","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super135","bufferCopy","decodeAudioData","audioBuffer","handleError","HemisphereLightProbe","_LightProbe","_super136","_this109","isHemisphereLightProbe","sky","ground","AmbientLightProbe","_LightProbe2","_super137","_this110","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super138","_this111","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super139","_this112","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super140","_this113","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super141","_this114","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","UniformsGroup","_EventDispatcher8","_super142","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super143","_this116","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super144","_this117","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super145","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh3","_super146","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super147","_this120","GridHelper","_LineSegments2","_super148","_this121","PolarGridHelper","_LineSegments3","_super149","sectors","rings","_this122","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super150","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super151","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super152","_this125","Box3Helper","_LineSegments6","_super153","_this126","PlaneHelper","_Line3","_super154","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super155","headLength","headWidth","_this128","setDirection","setColor","AxesHelper","_LineSegments7","_super156","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","revision","__THREE__","_three","require","subClass","superClass","_setPrototypeOf","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","Reflect","construct","_possibleConstructorReturn","ReferenceError","sham","Proxy","Boolean","valueOf","_changeEvent","_startEvent","_endEvent","OrbitControls","touchAction","minDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","stopListenToKeyEvents","saveState","STATE","quat","quatInverse","lastPosition","lastQuaternion","lastTargetPosition","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","zoomChanged","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","ctrlKey","metaKey","shiftKey","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","trackPointer","pointer","passive","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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","file":"main.6fb71d3e.js","sourceRoot":"..\\src","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '154';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().fromArray( [\n\t0.8224621, 0.0331941, 0.0170827,\n\t0.1775380, 0.9668058, 0.0723974,\n\t- 0.0000001, 0.0000001, 0.9105199\n] );\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().fromArray( [\n\t1.2249401, - 0.0420569, - 0.0196376,\n\t- 0.2249404, 1.0420571, - 0.0786361,\n\t0.0000001, 0.0000000, 1.0982735\n] );\n\nfunction DisplayP3ToLinearSRGB( color ) {\n\n\t// Display P3 uses the sRGB transfer functions\n\treturn color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB );\n\n}\n\nfunction LinearSRGBToDisplayP3( color ) {\n\n\t// Display P3 uses the sRGB transfer functions\n\treturn color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB();\n\n}\n\n// Conversions from <source> to Linear-sRGB reference space.\nconst TO_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertSRGBToLinear(),\n\t[ DisplayP3ColorSpace ]: DisplayP3ToLinearSRGB,\n};\n\n// Conversions to <target> from Linear-sRGB reference space.\nconst FROM_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertLinearToSRGB(),\n\t[ DisplayP3ColorSpace ]: LinearSRGBToDisplayP3,\n};\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\tget legacyMode() {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\treturn ! this.enabled;\n\n\t},\n\n\tset legacyMode( legacyMode ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\tthis.enabled = ! legacyMode;\n\n\t},\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToLinear = TO_LINEAR[ sourceColorSpace ];\n\t\tconst targetFromLinear = FROM_LINEAR[ targetColorSpace ];\n\n\t\tif ( sourceToLinear === undefined || targetFromLinear === undefined ) {\n\n\t\t\tthrow new Error( `Unsupported color space conversion, \"${ sourceColorSpace }\" to \"${ targetColorSpace }\".` );\n\n\t\t}\n\n\t\treturn targetFromLinear( sourceToLinear( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$b.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$b );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$b.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$a.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box$3.copy( object.boundingBox );\n\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box$3 );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( precise && geometry.attributes !== undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t_vector$a.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\t\tthis.expandByPoint( _vector$a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\t\tthis.union( _box$3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$a );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$a.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$a ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$a ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$9 ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$9.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$9.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$9.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$9.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$9.dot( this.direction );\n\t\tconst d2 = _vector$9.dot( _vector$9 ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$9 ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value ) {\n\n\t\tlet result = [];\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst childResult = this.children[ i ].getObjectsByProperty( name, value );\n\n\t\t\tif ( childResult.length > 0 ) {\n\n\t\t\t\tresult = result.concat( childResult );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = this.alphaHash;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = this.forceSinglePass;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$8 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( this, i );\n\t\t\t\t_vector$8.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$7.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$7.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$7.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$7.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$5.copy( geometry.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$5.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$5, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn LinearSRGBColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$4.center.set( 0, 0, 0 );\n\t\t_sphere$4.radius = 0.7071067811865476;\n\t\t_sphere$4.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\t return vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat R21 = R12;\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tanisotropyV /= material.anisotropy;\\n\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, vMapUv );\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst xr = renderer.xr;\n\t\tconst environmentBlendMode = xr.getEnvironmentBlendMode();\n\n\t\tswitch ( environmentBlendMode ) {\n\n\t\t\tcase 'opaque':\n\t\t\t\tforceClear = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 'additive':\n\t\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\t\t\t\tforceClear = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 'alpha-blend':\n\t\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\t\t\t\tforceClear = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ( background.colorSpace === SRGBColorSpace ) ? false : true;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ( background.colorSpace === SRGBColorSpace ) ? false : true;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase SRGBColorSpace:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t} else {\n\n\t\t\t\t// default error reporting\n\n\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\tconsole.error(\n\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\tfragmentErrors\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV1 = !! geometry.attributes.uv1;\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\t\tconst HAS_ATTRIBUTE_UV3 = !! geometry.attributes.uv3;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUv1s: HAS_ATTRIBUTE_UV1,\n\t\t\tvertexUv2s: HAS_ATTRIBUTE_UV2,\n\t\t\tvertexUv3s: HAS_ATTRIBUTE_UV3,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tuseLegacyLights: renderer.useLegacyLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( colorSpace === SRGBColorSpace && forceLinearTransfer === false ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( colorSpace === SRGBColorSpace ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( colorSpace === SRGBColorSpace ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst tempValues = [];\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\ttempValues.push( values[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tcache[ index ] = tempValues;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObjects = Array.isArray( cache[ index ] ) ? cache[ index ] : [ cache[ index ] ];\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tfor ( let i = 0; i < cachedObjects.length; i ++ ) {\n\n\t\t\t\t\tconst cachedObject = cachedObjects[ i ];\n\n\t\t\t\t\tif ( cachedObject.equals( values[ i ] ) === false ) {\n\n\t\t\t\t\t\tcachedObject.copy( values[ i ] );\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\tconst infos = {\n\t\t\t\tboundary: 0, // bytes\n\t\t\t\tstorage: 0 // bytes\n\t\t\t};\n\n\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\tfor ( let j = 0, jl = values.length; j < jl; j ++ ) {\n\n\t\t\t\tconst value = values[ j ];\n\n\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\tinfos.boundary += info.boundary;\n\t\t\t\tinfos.storage += info.storage;\n\n\t\t\t}\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( infos.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - infos.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += infos.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis.useLegacyLights = true;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tfunction prepare( material, scene, object ) {\n\n\t\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentRenderState = renderStates.get( scene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tcurrentRenderState.setupLights( _this.useLegacyLights );\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this.useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tconst progUniforms = program.getUniforms();\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget physicallyCorrectLights() { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\treturn ! this.useLegacyLights;\n\n\t}\n\n\tset physicallyCorrectLights( value ) { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\tthis.useLegacyLights = ! value;\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$2.copy( this.boundingSphere );\n\t\t_sphere$2.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// same as Array.prototype.slice, but also works on typed arrays\nfunction arraySlice( array, from, to ) {\n\n\tif ( isTypedArray( array ) ) {\n\n\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t}\n\n\treturn array.slice( from, to );\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tarraySlice: arraySlice,\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = arraySlice( this.times ),\n\t\t\tvalues = arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = arraySlice( this.times, 0 );\n\t\tconst values = arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t}, handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > 0 ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n","/*\r\n * @Author: Qiling\r\n * @Date: 2023-07-04 23:51:39\r\n * @LastEditors: qiling qiling@qunhemail.com\r\n * @LastEditTime: 2023-07-05 01:25:23\r\n * @FilePath: \\01-three_basic\\src\\main\\main.tsx\r\n * @Description:\r\n *\r\n */\r\nimport * as THREE from \"three\";\r\n// 导入轨道控制器\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n// console.log(THREE);\r\n// 目的：设置物体缩放\r\n// 初始化场景\r\nconst scene = new THREE.Scene();\r\n\r\n// 初始化相机\r\nconst camera = new THREE.PerspectiveCamera(\r\n  75, // 角度\r\n  window.innerWidth / window.innerHeight, // 宽高比\r\n  0.1, // 近平面\r\n  1000 // 远平面\r\n);\r\n// 设置相机位置\r\ncamera.position.set(0, 0, 10);\r\n\r\nscene.add(camera);\r\n\r\n// 添加物体\r\n// 创建几何体\r\nconst cubeGeometry = new THREE.BoxGeometry(1, 1, 1);\r\nconst cubeMateril = new THREE.MeshBasicMaterial({ color: 0xffff00 });\r\n// 根据几何材质创建物体\r\nconst cube = new THREE.Mesh(cubeGeometry, cubeMateril);\r\n\r\nconst edges = new THREE.EdgesGeometry(cubeGeometry);\r\n// 立方体线框，不显示中间的斜线\r\nconst edgesMaterial = new THREE.LineBasicMaterial({\r\n  color: 0x000000,\r\n});\r\nvar line = new THREE.LineSegments(edges, edgesMaterial);\r\n// 网格模型和网格模型对应的轮廓线框插入到场景中\r\n\r\n// 修改物体位置\r\n\r\n// 缩放\r\n// cube.scale.set(1, 2, 3);\r\n// line.scale.set(1, 2, 3);\r\n// 旋转\r\n// 弧度\r\ncube.rotation.set(0.5, 0.5, 0.5);\r\nline.rotation.set(0.5, 0.5, 0.5);\r\nscene.add(cube, line);\r\n// 初始化渲染器\r\nconst render = new THREE.WebGLRenderer({ antialias: true });\r\n// 设施渲染尺寸大小\r\nrender.setSize(window.innerWidth, window.innerHeight);\r\n// 将webgl中的canvas添加到body\r\ndocument.body.appendChild(render.domElement);\r\n// 使用渲染器，通过相机将场景渲染到屏幕上\r\n\r\nrender.render(scene, camera);\r\n\r\n// 创建轨道控制器\r\nconst controls = new OrbitControls(camera, render.domElement);\r\n\r\n// 添加坐标轴辅助器\r\nconst axesHelper = new THREE.AxesHelper(5);\r\nscene.add(axesHelper);\r\nfunction handleRender() {\r\n  cube.position.x += 0.01;\r\n  cube.rotation.x += 0.01;\r\n  line.position.x += 0.01;\r\n  line.rotation.x += 0.01;\r\n  if (cube.position.x > 5) {\r\n    cube.position.x = 0;\r\n    line.position.x = 0;\r\n  }\r\n  render.render(scene, camera);\r\n  //   请求下一帧渲染\r\n  requestAnimationFrame(handleRender);\r\n}\r\nhandleRender();\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}